(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./src/views/dashboard/render.js":
/*!***************************************!*\
  !*** ./src/views/dashboard/render.js ***!
  \***************************************/
/*! exports provided: renderIncomeChart, renderCustomerChart, renderRateChart, renderSoldOutChart, renderColumnChart, renderCircleChart, initChartTableData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderIncomeChart\", function() { return renderIncomeChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderCustomerChart\", function() { return renderCustomerChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderRateChart\", function() { return renderRateChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderSoldOutChart\", function() { return renderSoldOutChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderColumnChart\", function() { return renderColumnChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderCircleChart\", function() { return renderCircleChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initChartTableData\", function() { return initChartTableData; });\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"./node_modules/core-js/modules/es.object.to-string.js\");\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_number_to_fixed_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.number.to-fixed.js */ \"./node_modules/core-js/modules/es.number.to-fixed.js\");\n/* harmony import */ var core_js_modules_es_number_to_fixed_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_to_fixed_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ \"./node_modules/core-js/modules/es.string.replace.js\");\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n/*\r\n * @Author: 徐建辰\r\n * @Date: 2021-10-23 11:35:35\r\n * @LastEditTime: 2021-10-23 14:34:00\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 首页图表渲染文件\r\n */\n// eslint-disable-next-line no-undef\nvar _G2Plot = G2Plot,\n    Area = _G2Plot.Area,\n    Bullet = _G2Plot.Bullet,\n    Pie = _G2Plot.Pie,\n    DualAxes = _G2Plot.DualAxes; // eslint-disable-next-line no-undef\n\nvar _G = G2,\n    Chart = _G.Chart; // 渲染收入图表\n\nvar renderIncomeChart = function renderIncomeChart(container) {\n  fetch('https://gw.alipayobjects.com/os/bmw-prod/1d565782-dde4-4bb6-8946-ea6a38ccf184.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var area = new Area(container, {\n      data: data,\n      xField: 'Date',\n      yField: 'scales',\n      xAxis: {\n        range: [0, 1],\n        tickCount: 5\n      },\n      areaStyle: function areaStyle() {\n        return {\n          fill: 'l(270) 0:#ffffff 0.5:#7ec2f3 1:#1890ff'\n        };\n      }\n    });\n    area.render();\n  });\n}; // 渲染客户数\n\nvar renderCustomerChart = function renderCustomerChart(container) {\n  var customerData = [{\n    type: '3月',\n    value: 2654,\n    percent: 0.4\n  }, {\n    type: '4月',\n    value: 3654,\n    percent: 0.02\n  }, {\n    type: '5月',\n    value: 4400,\n    percent: 0.2\n  }, {\n    type: '6月',\n    value: 5300,\n    percent: 0.24\n  }, {\n    type: '7月',\n    value: 6200,\n    percent: 0.28\n  }, {\n    type: '8月',\n    value: 3300,\n    percent: 0.14\n  }, {\n    type: '9月',\n    value: 1500,\n    percent: 0.06\n  }];\n  var chart = new Chart({\n    container: container,\n    autoFit: true,\n    height: 500,\n    padding: [50, 20, 50, 20]\n  });\n  chart.data(customerData);\n  chart.scale('value', {\n    alias: '总数'\n  });\n  chart.axis('type', {\n    tickLine: {\n      alignTick: false\n    }\n  });\n  chart.axis('value', false);\n  chart.tooltip({\n    showMarkers: false\n  });\n  chart.interval().position('type*value');\n  chart.interaction('element-active'); // 添加文本标注\n\n  customerData.forEach(function (item) {\n    chart.annotation().text({\n      position: [item.type, item.value],\n      content: item.value,\n      style: {\n        textAlign: 'center'\n      },\n      offsetY: -30\n    }).text({\n      position: [item.type, item.value],\n      content: (item.percent * 100).toFixed(0) + '%',\n      style: {\n        textAlign: 'center'\n      },\n      offsetY: -12\n    });\n  });\n  chart.render();\n}; // 渲染好评数\n\nvar renderRateChart = function renderRateChart(container) {\n  var data = [{\n    title: '满意度',\n    ranges: [40, 70, 100],\n    measures: [30, 50],\n    target: 85\n  }];\n  var bulletPlot = new Bullet(container, {\n    data: data,\n    measureField: 'measures',\n    rangeField: 'ranges',\n    targetField: 'target',\n    xField: 'title',\n    color: {\n      range: ['#FFbcb8', '#FFe0b0', '#bfeec8'],\n      measure: ['#5B8FF9', '#61DDAA'],\n      target: '#39a3f4'\n    },\n    label: {\n      measure: {\n        position: 'middle',\n        style: {\n          fill: '#fff'\n        }\n      }\n    },\n    xAxis: {\n      line: null\n    },\n    yAxis: false,\n    tooltip: {\n      showMarkers: false,\n      shared: true\n    },\n    // 自定义 legend\n    legend: {\n      custom: true,\n      position: 'bottom',\n      items: [{\n        value: '差',\n        name: '差',\n        marker: {\n          symbol: 'square',\n          style: {\n            fill: '#FFbcb8',\n            r: 5\n          }\n        }\n      }, {\n        value: '良',\n        name: '良',\n        marker: {\n          symbol: 'square',\n          style: {\n            fill: '#FFe0b0',\n            r: 5\n          }\n        }\n      }, {\n        value: '优',\n        name: '优',\n        marker: {\n          symbol: 'square',\n          style: {\n            fill: '#bfeec8',\n            r: 5\n          }\n        }\n      }, {\n        value: '第一季度',\n        name: '第一季度',\n        marker: {\n          symbol: 'square',\n          style: {\n            fill: '#5B8FF9',\n            r: 5\n          }\n        }\n      }, {\n        value: '第二季度',\n        name: '第二季度',\n        marker: {\n          symbol: 'square',\n          style: {\n            fill: ' #61DDAA',\n            r: 5\n          }\n        }\n      }, {\n        value: '目标值',\n        name: '目标值',\n        marker: {\n          symbol: 'line',\n          style: {\n            stroke: '#39a3f4',\n            r: 5\n          }\n        }\n      }]\n    }\n  });\n  bulletPlot.render();\n}; // 渲染已售出\n\nvar renderSoldOutChart = function renderSoldOutChart(container) {\n  var data = [{\n    type: '男生上衣',\n    value: 27\n  }, {\n    type: '七分裤',\n    value: 25\n  }, {\n    type: '包包',\n    value: 18\n  }, {\n    type: '休闲鞋',\n    value: 15\n  }, {\n    type: '连衣裙',\n    value: 10\n  }, {\n    type: '其他',\n    value: 5\n  }];\n  var piePlot = new Pie(container, {\n    appendPadding: 10,\n    data: data,\n    angleField: 'value',\n    colorField: 'type',\n    radius: 0.8,\n    label: {\n      type: 'outer',\n      content: '{name} {percentage}'\n    },\n    interactions: [{\n      type: 'pie-legend-active'\n    }, {\n      type: 'element-active'\n    }]\n  });\n  piePlot.render();\n}; // 渲染柱状图\n\nvar renderColumnChart = function renderColumnChart(container) {\n  var renderColumnData = [{\n    type: \"收纳\",\n    value: 46340,\n    cat: \"办公用品\"\n  }, {\n    type: \"笔\",\n    value: 26000,\n    cat: \"办公用品\"\n  }, {\n    type: \"纸张\",\n    value: 15220,\n    cat: \"办公用品\"\n  }, {\n    type: \"配件\",\n    value: 4090,\n    cat: \"技术\"\n  }, {\n    type: \"电话\",\n    value: 9880,\n    cat: \"技术\"\n  }, {\n    type: \"复印机\",\n    value: 4088,\n    cat: \"技术\"\n  }, {\n    type: \"桌子\",\n    value: 14870,\n    cat: \"家具\"\n  }, {\n    type: \"椅子\",\n    value: 33708,\n    cat: \"家具\"\n  }, {\n    type: \"书架\",\n    value: 44900,\n    cat: \"家具\"\n  }];\n  var chart = new Chart({\n    container: container,\n    autoFit: true,\n    height: 500,\n    padding: [20, 0, 50, 100]\n  });\n  chart.data(renderColumnData);\n  chart.scale({\n    value: {\n      max: 55000,\n      min: 0,\n      alias: \"金额（元）\"\n    }\n  });\n  chart.axis(\"type\", {\n    tickLine: null,\n    line: null\n  });\n  chart.axis(\"value\", {\n    label: null,\n    title: {\n      offset: 30,\n      tyle: {\n        fontWeight: 400\n      }\n    },\n    grid: null\n  });\n  chart.legend(false);\n  chart.coordinate(\"rect\").transpose();\n  chart.interval().position(\"type*value\").color(\"cat\", [\"#face1d\", \"#67DEAC\", \"#2194ff\"]).size(26).label(\"value\", {\n    style: {\n      fill: \"#8d8d8d\"\n    },\n    offset: 10,\n    content: function content(originData) {\n      return (originData.value + \"\").replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\");\n    }\n  });\n  chart.annotation().text({\n    top: true,\n    position: [\"椅子\", \"min\"],\n    content: \"家具\",\n    style: {\n      fill: \"#c0c0c0\",\n      fontSize: 12,\n      fontWeight: \"300\",\n      textAlign: \"center\"\n    },\n    offsetX: -70,\n    rotate: Math.PI * -0.5\n  });\n  chart.annotation().text({\n    top: true,\n    position: [\"电话\", \"min\"],\n    content: \"技术\",\n    style: {\n      fill: \"#c0c0c0\",\n      fontSize: 12,\n      fontWeight: \"300\",\n      textAlign: \"center\"\n    },\n    offsetX: -70,\n    rotate: Math.PI * -0.5\n  });\n  chart.annotation().text({\n    top: true,\n    position: [\"笔\", \"min\"],\n    content: \"办公用品\",\n    style: {\n      fill: \"#c0c0c0\",\n      fontSize: 12,\n      fontWeight: \"300\",\n      textAlign: \"center\"\n    },\n    offsetX: -70,\n    rotate: Math.PI * -0.5\n  });\n  chart.annotation().line({\n    start: [\"-20%\", \"33.2%\"],\n    end: [\"100%\", \"33.2%\"],\n    style: {\n      stroke: \"#c0c0c0\",\n      lineDash: [2, 2]\n    }\n  });\n  chart.annotation().line({\n    start: [\"-20%\", \"66.8%\"],\n    end: [\"100%\", \"66.8%\"],\n    style: {\n      stroke: \"#c0c0c0\",\n      lineDash: [2, 2]\n    }\n  });\n  chart.interaction(\"element-active\");\n  chart.render();\n}; // 渲染圆形图\n\nvar renderCircleChart = function renderCircleChart(container) {\n  var circleChartData = [{\n    item: '上海',\n    count: 40,\n    percent: 0.4\n  }, {\n    item: '北京',\n    count: 21,\n    percent: 0.21\n  }, {\n    item: '山东',\n    count: 17,\n    percent: 0.17\n  }, {\n    item: '天津',\n    count: 13,\n    percent: 0.13\n  }, {\n    item: '江苏',\n    count: 9,\n    percent: 0.09\n  }];\n  var chart = new Chart({\n    container: container,\n    autoFit: true,\n    height: 500\n  });\n  chart.data(circleChartData);\n  chart.coordinate('theta', {\n    radius: 0.85\n  });\n  chart.scale('percent', {\n    formatter: function formatter(val) {\n      val = val * 100 + '%';\n      return val;\n    }\n  });\n  chart.tooltip({\n    showTitle: false,\n    showMarkers: false\n  });\n  chart.axis(false); // 关闭坐标轴\n\n  var interval = chart.interval().adjust('stack').position('percent').color('item').label('percent', {\n    offset: -40,\n    style: {\n      textAlign: 'center',\n      shadowBlur: 2,\n      shadowColor: 'rgba(0, 0, 0, .45)',\n      fill: '#fff'\n    }\n  }).tooltip('item*percent', function (item, percent) {\n    percent = percent * 100 + '%';\n    return {\n      name: item,\n      value: percent\n    };\n  }).style({\n    lineWidth: 1,\n    stroke: '#fff'\n  });\n  chart.interaction('element-single-selected');\n  chart.render(); // 默认选择\n\n  interval.elements[0].setState('selected', true);\n}; // 渲染统计图\n\nvar initChartTableData = function initChartTableData(container) {\n  var uvBillData = [{\n    time: '2019-03',\n    value: 350,\n    type: 'uv'\n  }, {\n    time: '2019-04',\n    value: 900,\n    type: 'uv'\n  }, {\n    time: '2019-05',\n    value: 300,\n    type: 'uv'\n  }, {\n    time: '2019-06',\n    value: 450,\n    type: 'uv'\n  }, {\n    time: '2019-07',\n    value: 470,\n    type: 'uv'\n  }, {\n    time: '2019-03',\n    value: 220,\n    type: 'bill'\n  }, {\n    time: '2019-04',\n    value: 300,\n    type: 'bill'\n  }, {\n    time: '2019-05',\n    value: 250,\n    type: 'bill'\n  }, {\n    time: '2019-06',\n    value: 220,\n    type: 'bill'\n  }, {\n    time: '2019-07',\n    value: 362,\n    type: 'bill'\n  }];\n  var transformData = [{\n    time: '2019-03',\n    count: 800,\n    name: 'a'\n  }, {\n    time: '2019-04',\n    count: 600,\n    name: 'a'\n  }, {\n    time: '2019-05',\n    count: 400,\n    name: 'a'\n  }, {\n    time: '2019-06',\n    count: 380,\n    name: 'a'\n  }, {\n    time: '2019-07',\n    count: 220,\n    name: 'a'\n  }, {\n    time: '2019-03',\n    count: 750,\n    name: 'b'\n  }, {\n    time: '2019-04',\n    count: 650,\n    name: 'b'\n  }, {\n    time: '2019-05',\n    count: 450,\n    name: 'b'\n  }, {\n    time: '2019-06',\n    count: 400,\n    name: 'b'\n  }, {\n    time: '2019-07',\n    count: 320,\n    name: 'b'\n  }, {\n    time: '2019-03',\n    count: 900,\n    name: 'c'\n  }, {\n    time: '2019-04',\n    count: 600,\n    name: 'c'\n  }, {\n    time: '2019-05',\n    count: 450,\n    name: 'c'\n  }, {\n    time: '2019-06',\n    count: 300,\n    name: 'c'\n  }, {\n    time: '2019-07',\n    count: 200,\n    name: 'c'\n  }];\n  var dualAxes = new DualAxes(container, {\n    data: [uvBillData, transformData],\n    xField: 'time',\n    yField: ['value', 'count'],\n    slider: {\n      start: 0.1,\n      end: 0.9,\n      trendCfg: {\n        isArea: true\n      }\n    },\n    geometryOptions: [{\n      geometry: 'line',\n      seriesField: 'type',\n      lineStyle: {\n        lineWidth: 3,\n        lineDash: [5, 5]\n      },\n      smooth: true\n    }, {\n      geometry: 'line',\n      seriesField: 'name',\n      point: {}\n    }]\n  });\n  dualAxes.render();\n};\n\n//# sourceURL=webpack:///./src/views/dashboard/render.js?");

/***/ })

}]);